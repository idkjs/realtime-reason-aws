// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Wonka = require("wonka/src/wonka.js");
var React = require("react");
var Graphql$ReactTemplate = require("../graphql/Graphql.bs.js");
var GqlClient$ReactTemplate = require("../client/GqlClient.bs.js");
var AwsExports$ReactTemplate = require("../aws/AwsExports.bs.js");

var client = Curry._1(GqlClient$ReactTemplate.Client.make, AwsExports$ReactTemplate.config);

var initialState = {
  query: ""
};

var queryRequest = Graphql$ReactTemplate.ListMessages.make(undefined, undefined, undefined, /* () */0);

function testQuery(param) {
  return Wonka.subscribe((function (data) {
                  var match = data.response;
                  if (typeof match === "number") {
                    return /* () */0;
                  } else if (match.tag) {
                    var match$1 = JSON.stringify(match[0]);
                    if (match$1 !== undefined) {
                      console.log("testQuery", match$1);
                      return /* () */0;
                    } else {
                      return /* () */0;
                    }
                  } else {
                    var match$2 = JSON.stringify(match[0]);
                    if (match$2 !== undefined) {
                      console.log("testQuery", match$2);
                      return /* () */0;
                    } else {
                      return /* () */0;
                    }
                  }
                }))(Curry._3(GqlClient$ReactTemplate.Client.executeQuery, client, queryRequest, /* () */0));
}

function Demo(Props) {
  var match = React.useReducer((function (state, action) {
          if (action) {
            return {
                    query: action[0]
                  };
          } else {
            return {
                    query: ""
                  };
          }
        }), initialState);
  var dispatch = match[1];
  var executeQuery = function (param) {
    return Wonka.subscribe((function (data) {
                    var match = data.response;
                    if (typeof match === "number") {
                      return /* () */0;
                    } else {
                      var match$1 = JSON.stringify(match[0]);
                      if (match$1 !== undefined) {
                        return Curry._1(dispatch, /* SetQuery */[match$1]);
                      } else {
                        return /* () */0;
                      }
                    }
                  }))(Curry._3(GqlClient$ReactTemplate.Client.executeQuery, client, queryRequest, /* () */0));
  };
  return React.createElement("div", {
              className: "container"
            }, React.createElement("div", {
                  className: "jumbotron jumbotron-fluid p-0"
                }, React.createElement("h2", {
                      className: "center"
                    }, "CheckConsole")), React.createElement("section", undefined, React.createElement("button", {
                      className: "btn btn-primary",
                      onClick: (function (_event) {
                          executeQuery(/* () */0);
                          return /* () */0;
                        })
                    }, "Execute Query")));
}

var make = Demo;

var $$default = Demo;

exports.client = client;
exports.initialState = initialState;
exports.queryRequest = queryRequest;
exports.testQuery = testQuery;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* client Not a pure module */
